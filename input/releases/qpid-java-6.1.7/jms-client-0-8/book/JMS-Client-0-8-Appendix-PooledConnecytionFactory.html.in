<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">Appendix&#160;D.&#160;PooledConnectionFactory</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="JMS-Client-0-8-Appendix-JMS-Extensions-Binding.html">Prev</a>&#160;</td><th align="center" width="60%">&#160;</th><td align="right" width="20%">&#160;<a accesskey="n" href="JMS-Client-0-8-Appendix-Tomcat-JNDI-Integration.html">Next</a></td></tr></table><hr /></div><div class="appendix"><div class="titlepage"><div><div><h1 class="title"><a id="JMS-Client-0-8-Appendix-PooledConnecytionFactory"></a>Appendix&#160;D.&#160;PooledConnectionFactory</h1></div></div></div><p>Qpid client provides <code class="literal">PooledConnectionFactory</code> which is a special
    implementation of <a class="link" href="http://docs.oracle.com/javaee/6/api/javax/jms/ConnectionFactory.html" target="_top">ConnectionFactory</a> supporting <a class="link" href="http://docs.oracle.com/javaee/6/api/javax/jms/Connection.html" target="_top">Connection</a> pooling. </p><p> The <code class="literal">PooledConnectionFactory</code> caches a predefined number of connections
    thus saving an application which connects frequently time. The <code class="literal">Connection</code>
    instance is taken from the pool whenever method
      <code class="literal">PooledConnectionFactory#createConnection()</code> is invoked and returned into the
    pool when method <code class="literal">Connection#close()</code> is called.</p><p>A user can configure a maximum allowed number of connections to remain in pool (10 by
    default) by calling <code class="literal">PooledConnectionFactory#setMaxPoolSize(int)</code>. When number
    of connections exceeds the value set for maximum pool size,
      <code class="literal">PooledConnectionFactory</code> starts to work as a normal <a class="link" href="http://docs.oracle.com/javaee/6/api/javax/jms/ConnectionFactory.html" target="_top">ConnectionFactory</a> and creates
    a new connection every time method <code class="literal">PooledConnectionFactory#createConnection()</code>
    is invoked.</p><p>The <a class="link" href="JMS-Client-0-8-Connection-URL.html" title="Chapter&#160;7.&#160;Connection URLs">Connection URL</a> is set by invoking
    method <code class="literal">PooledConnectionFactory#setConnectionURLString(String)</code>.</p><p>A user can specify the maximum time a connection may remain idle in pool by calling
      <code class="literal">PooledConnectionFactory#setConnectionTimeout(long)</code> passing a value in
    milliseconds. If connection is not used within the specified interval it is closed
    automatically. </p><p>This implementation can be useful in <span class="emphasis"><em>Spring JMS</em></span> based applications. An
    example below demonstrates how to configure <code class="literal">PooledConnectionFactory</code> in the
    Spring xml configuration. </p><div class="example"><a id="d0e3161"></a><p class="title"><strong>Example&#160;D.1.&#160;Example of configuring <span class="emphasis"><em>PooledConnectionFactory</em></span> in spring xml
        configuration.</strong></p><div class="example-contents"><pre class="programlisting">
&lt;bean id="pooledConnectionFactory" class="org.apache.qpid.client.PooledConnectionFactory"&gt;
  &lt;!-- set maximum number of pool connections to 20--&gt;
  &lt;property name="maxPoolSize" value="20"&gt;&lt;/property&gt;
  &lt;!-- set the timeout for connection to remain open in pool without being used --&gt;
  &lt;property name="connectionTimeout" value="60000"&gt;&lt;/property&gt;
  &lt;!-- set connection URL as String --&gt;
  &lt;property name="connectionURLString" value="amqp://guest:guest@clientid/default?brokerlist='tcp://localhost:5672?retries='300'&amp;failover='nofailover''&amp;maxprefetch='0'"&gt;&lt;/property&gt;
&lt;/bean&gt;</pre></div></div><p><br class="example-break" />
  </p><p>
    <span class="emphasis"><em>PooledConnectionFactory</em></span> spring bean can be configured with such
      <span class="emphasis"><em>spring-jms</em></span> beans like
      <span class="emphasis"><em>DefaultMessageListenerContainer</em></span> and <span class="emphasis"><em>JmsTemplate</em></span>. The
    example below demonstrates how to do that </p><div class="example"><a id="d0e3184"></a><p class="title"><strong>Example&#160;D.2.&#160;Examples of configuring <span class="emphasis"><em>PooledConnectionFactory</em></span> with
          <span class="emphasis"><em>DefaultMessageListenerContainer</em></span> and
        <span class="emphasis"><em>JmsTemplate</em></span>.</strong></p><div class="example-contents"><pre class="programlisting">
&lt;bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"&gt;
    &lt;!-- set reference to pooledConnectionFactory bean --&gt;
    &lt;property name="connectionFactory" ref="pooledConnectionFactory"&gt;&lt;/property&gt;
    &lt;property name="defaultDestination" ref="destination" /&gt;
&lt;/bean&gt;

&lt;bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"&gt;
    &lt;!-- set reference to pooledConnectionFactory bean --&gt;
    &lt;property name="connectionFactory" ref="pooledConnectionFactory"/&gt;
    &lt;property name="destination" ref="destination"/&gt;
    &lt;property name="messageListener" ref="messageListener" /&gt;
&lt;/bean&gt;</pre></div></div><p><br class="example-break" />
  </p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>If using <code class="literal">DefaultMessageListenerContainer</code> with
        <code class="literal">cacheLevel</code> set to <code class="literal">NONE</code> it is important that
        <code class="literal">maxConcurrentConsumer</code> does not exceed the value of maximum pool size set
      on <code class="literal">PooledConnectionFactory</code> bean. If this is not the case, once the number
      of in-use connections reaches the the <span class="emphasis"><em>PooledConnectionFactory#maxPoolSize</em></span>
      a new connection will be opened for each and every message receipt i.e. a connection per
      message anti-pattern.</p></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="JMS-Client-0-8-Appendix-JMS-Extensions-Binding.html">Prev</a>&#160;</td><td align="center" width="20%">&#160;</td><td align="right" width="40%">&#160;<a accesskey="n" href="JMS-Client-0-8-Appendix-Tomcat-JNDI-Integration.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">C.2.&#160;Binding Management&#160;</td><td align="center" width="20%"><a accesskey="h" href="JMS-Client-Book.html">Home</a></td><td align="right" valign="top" width="40%">&#160;Appendix&#160;E.&#160;How to bind Qpid destinations and connection factories into Tomcat JNDI</td></tr></table></div></div>