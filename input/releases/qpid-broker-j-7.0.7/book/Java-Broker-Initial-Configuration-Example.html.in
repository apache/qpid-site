<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">5.7.&#160;Example of JSON 'Initial Configuration'</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Configuration-Properties.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;5.&#160;Initial Configuration</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Management-Channel.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="Java-Broker-Initial-Configuration-Example"></a>5.7.&#160;Example of JSON 'Initial Configuration'</h2></div></div></div><p> An example of the default 'Initial Configuration' JSON file the broker uses is
            provided below:</p><div class="example"><a id="d0e1675"></a><p class="title"><strong>Example&#160;5.1.&#160;JSON 'Initial configuration' File</strong></p><div class="example-contents"><pre class="programlisting">
{
  "name": "${broker.name}",
  "modelVersion": "7.0",
  "authenticationproviders" : [ {
    "name" : "passwordFile",
    "type" : "PlainPasswordFile",
    "path" : "${qpid.home_dir}${file.separator}etc${file.separator}passwd"
  } ],
    "brokerloggers" : [ {
    "name" : "logfile",
    "type" : "File",
    "fileName" : "${qpid.work_dir}${file.separator}log${file.separator}qpid.log",
    "brokerloginclusionrules" : [ {
      "name" : "Root",
      "type" : "NameAndLevel",
      "level" : "WARN",
      "loggerName" : "ROOT"
    }, {
      "name" : "Qpid",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "org.apache.qpid.*"
    }, {
      "name" : "Operational",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "qpid.message.*"
    }, {
      "name" : "Statistics",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "qpid.statistics.*"
    } ]
  }, {
    "name" : "memory",
    "type" : "Memory",
    "brokerloginclusionrules" : [ {
      "name" : "Root",
      "type" : "NameAndLevel",
      "level" : "WARN",
      "loggerName" : "ROOT"
    }, {
      "name" : "Qpid",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "org.apache.qpid.*"
    }, {
      "name" : "Operational",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "qpid.message.*"
    }, {
      "name" : "Statistics",
      "type" : "NameAndLevel",
      "level" : "INFO",
      "loggerName" : "qpid.statistics.*"
    } ]
  } ],
  "ports" : [  {
    "name" : "AMQP",
    "port" : "${qpid.amqp_port}",
    "authenticationProvider" : "passwordFile",
    "virtualhostaliases" : [ {
       "name" : "nameAlias",
       "type" : "nameAlias"
    }, {
        "name" : "defaultAlias",
        "type" : "defaultAlias"
    }, {
        "name" : "hostnameAlias",
        "type" : "hostnameAlias"
    } ]
  }, {
    "name" : "HTTP",
    "port" : "${qpid.http_port}",
    "authenticationProvider" : "passwordFile",
    "protocols" : [ "HTTP" ]
  }],
  "virtualhostnodes" : [ {
    "name" : "default",
    "type" : "JSON",
    "defaultVirtualHostNode" : "true",
    "virtualHostInitialConfiguration" : "\\${qpid.initial_config_virtualhost_config}"
  } ],
  "plugins" : [ {
    "type" : "MANAGEMENT-HTTP",
    "name" : "httpManagement"
  } ]
}
</pre><p>In the configuration above the following entries are stored: </p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p> Authentication Provider of type
                                <span class="emphasis"><em>PlainPasswordFile</em></span> with name "passwordFile".
                        </p></li><li class="listitem"><p> Two Port entries: "AMQP", "HTTP"
                        </p></li><li class="listitem"><p> Virtualhost Node called default. On initial startup, it
                            virtualHostInitialConfiguration will cause a virtualhost to be created
                            with the same name. The configuration will be stored in a
                                <span class="emphasis"><em>JSON</em></span> configuration store, the message data will
                            be stored in a <span class="emphasis"><em>DERBY</em></span> message store.</p></li><li class="listitem"><p>One management plugin: "httpManagement" of type "MANAGEMENT-HTTP".</p></li><li class="listitem"><p>Broker attributes are stored as a root entry.</p></li></ul></div><p>
            </p></div></div><br class="example-break" /></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Configuration-Properties.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="Java-Broker-Initial-Configuration.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Management-Channel.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">5.6.&#160;Customising Configuration using Configuration Properties&#160;</td><td align="center" width="20%"><a accesskey="h" href="Apache-Qpid-Broker-J-Book.html">Home</a></td><td align="right" valign="top" width="40%">&#160;Chapter&#160;6.&#160;Management Channels</td></tr></table></div></div>