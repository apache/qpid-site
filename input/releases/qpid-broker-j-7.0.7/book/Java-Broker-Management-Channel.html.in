<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">Chapter&#160;6.&#160;Management Channels</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Example.html">Prev</a>&#160;</td><th align="center" width="60%">&#160;</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Management-Channel-Web-Console.html">Next</a></td></tr></table><hr /></div><div class="chapter"><div class="titlepage"><div><div><h1 class="title"><a id="Java-Broker-Management-Channel"></a>Chapter&#160;6.&#160;Management Channels</h1></div></div></div><div class="toc"><p><strong>Table of Contents</strong></p><dl class="toc"><dt><span class="section"><a href="Java-Broker-Management-Channel.html#Java-Broker-Management-Channel-HTTP">6.1. HTTP Management</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Management-Channel.html#Java-Broker-Management-Channel-HTTP-Introduction">6.1.1. Introduction</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel.html#Java-Broker-Management-Channel-HTTP-DefaultConfiguration">6.1.2. Default Configuration</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Management-Channel-Web-Console.html">6.2. Web Management Console</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Management-Channel-Web-Console.html#Java-Broker-Management-Channel-Web-Console-Accessing">6.2.1. Accessing the Console</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-Web-Console.html#Java-Broker-Management-Channel-Web-Console-Orientation">6.2.2. Orientation</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-Web-Console.html#Java-Broker-Management-Channel-Web-Console-Managing-Entities">6.2.3. Managing Entities</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html">6.3. REST API</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Introduction">6.3.1. Introduction</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-APIDocs">6.3.2. REST API documentation</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Authentication">6.3.3. Authentication</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Create">6.3.4. Configured Object creation</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Update">6.3.5. Configured Object update</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Delete">6.3.6. Configured Object deletion</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Get">6.3.7. Retrieving Configured Object details</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Operations">6.3.8. Configured Object operations</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Status-Codes">6.3.9. HTTP status codes returned by REST interfaces</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-Examples">6.3.10. Examples of REST requests with curl</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-Query-API">6.3.11. Query API</a></span></dt><dt><span class="section"><a href="Java-Broker-Management-Channel-REST-API.html#Java-Broker-Management-Channel-REST-API-CORS">6.3.12. Cross Origin Resource Sharing (CORS)</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-Management-Channel-AMQP-Intrinstic.html">6.4. AMQP Intrinstic Management</a></span></dt></dl></div><p>The Broker can be managed over a number of different channels.</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>HTTP - The primary channel for management. The HTTP interface comprises a Web
        Console and a REST API.</p></li><li class="listitem"><p>AMQP - The AMQP protocols 0-8..0-10 allow for some management of Exchanges, Queue and
        Bindings. This will be superseded by AMQP 1.0 Management. It is suggested that new users
        favour the Management facilities provided by the Web Console/REST API.</p></li></ul></div><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="Java-Broker-Management-Channel-HTTP"></a>6.1.&#160;HTTP Management</h2></div></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="Java-Broker-Management-Channel-HTTP-Introduction"></a>6.1.1.&#160;Introduction</h3></div></div></div><p>The HTTP Management plugin provides a HTTP based API for monitoring and control of the
            Broker. The plugin actually provides two interfaces:</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p><a class="link" href="Java-Broker-Management-Channel-Web-Console.html" title="6.2.&#160;Web Management Console">Web Management
                            Console</a> - rich web based interface for the management of the
                        Broker.</p></li><li class="listitem"><p><a class="link" href="Java-Broker-Management-Channel-REST-API.html" title="6.3.&#160;REST API">REST API</a> -
                        REST API providing complete programmatic management of the Broker.</p></li></ul></div><p>The Web Management Console itself uses the REST API, so every function you can perform
            through the Web Management Console can be also be scripted and integrated into other
            systems. This provides a simple integration point allowing the Broker to monitored and
            controlled from systems such as Naoios or BMC Control-M.</p></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a id="Java-Broker-Management-Channel-HTTP-DefaultConfiguration"></a>6.1.2.&#160;Default Configuration</h3></div></div></div><p>By default, the Broker is shipped with HTTP enabled running port 8080. The HTTP plugin
            is configured to require SASL authentication. The port is not SSL protected.</p><p>The settings can be changed by configuring the HTTP plugin and/or the port configured
            to serve HTTP.</p></div></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Example.html">Prev</a>&#160;</td><td align="center" width="20%">&#160;</td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Management-Channel-Web-Console.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">5.7.&#160;Example of JSON 'Initial Configuration'&#160;</td><td align="center" width="20%"><a accesskey="h" href="Apache-Qpid-Broker-J-Book.html">Home</a></td><td align="right" valign="top" width="40%">&#160;6.2.&#160;Web Management Console</td></tr></table></div></div>