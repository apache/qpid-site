<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">2.2.&#160;.NET Binding for the C++ Messaging Client Examples</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="ch02.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;2.&#160;The .NET Binding for the C++ Messaging Client</th><td align="right" width="20%">&#160;<a accesskey="n" href="ch02s03.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title"><a id="idm140612067642848"></a>2.2.&#160;.NET Binding for the C++ Messaging Client Examples</h2></div></div></div><p>This chapter describes the various sample programs that
      are available to illustrate common Qpid Messaging usage.</p><div class="table"><a id="table-Dotnet-Binding-Example-Client-Server"></a><p class="title"><strong>Table&#160;2.2.&#160;Example : Client - Server</strong></p><div class="table-contents"><table border="1" class="table" summary="Example : Client - Server"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.example.server</td><td>Creates a Receiver and listens for messages.
		Upon message reception the message content is converted to upper case
		and forwarded to the received message's ReplyTo address.</td></tr><tr><td>csharp.example.client</td><td>Sends a series of messages to the Server and prints the original message
		content and the received message content.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-MapSender-MapReceiver"></a><p class="title"><strong>Table&#160;2.3.&#160;Example : Map Sender &#8211; Map Receiver</strong></p><div class="table-contents"><table border="1" class="table" summary="Example : Map Sender &#8211; Map Receiver"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.map.receiver</td><td>Creates a Receiver and listens for a map message.
		Upon message reception the message is decoded and displayed on the console.</td></tr><tr><td>csharp.map.sender</td><td>Creates a map message and sends it to map.receiver.
		The map message contains values for every supported .NET Messaging
		Binding data type.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-Spout-Drain"></a><p class="title"><strong>Table&#160;2.4.&#160;Example : Spout - Drain</strong></p><div class="table-contents"><table border="1" class="table" summary="Example : Spout - Drain"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.example.spout</td><td>Spout is a more complex example of code that generates a series of messages
		and sends them to peer program Drain. Flexible command line arguments allow
		the user to specify a variety of message and program options.</td></tr><tr><td>csharp.example.drain</td><td>Drain is a more complex example of code that receives a series of messages
		and displays their contents on the console.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-CallbackSender-CallbackReceiver"></a><p class="title"><strong>Table&#160;2.5.&#160;Example : Map Callback Sender &#8211; Map Callback Receiver</strong></p><div class="table-contents"><table border="1" class="table" summary="Example : Map Callback Sender &#8211; Map Callback Receiver"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.map.callback.receiver</td><td>Creates a Receiver and listens for a map message.
		Upon message reception the message is decoded and displayed on the console.
		This example illustrates the use of the C# managed code callback mechanism
		provided by .NET Messaging Binding Managed Callback Library.</td></tr><tr><td>csharp.map.callback.sender</td><td>Creates a map message and sends it to map_receiver.
		The map message contains values for every supported .NET Messaging
		Binding data type.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-DeclareQueues"></a><p class="title"><strong>Table&#160;2.6.&#160;Example - Declare Queues</strong></p><div class="table-contents"><table border="1" class="table" summary="Example - Declare Queues"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.example.declare_queues</td><td>A program to illustrate creating objects on a broker.
		This program creates a queue used by spout and drain.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-DirectSender-DirectReceiver"></a><p class="title"><strong>Table&#160;2.7.&#160;Example: Direct Sender - Direct Receiver</strong></p><div class="table-contents"><table border="1" class="table" summary="Example: Direct Sender - Direct Receiver"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.direct.receiver</td><td>Creates a Receiver and listens for a messages.
		Upon message reception the message is decoded and displayed on the console.</td></tr><tr><td>csharp.direct.sender</td><td> Creates a series of messages and sends them to csharp.direct.receiver.</td></tr></tbody></table></div></div><br class="table-break" /><div class="table"><a id="table-Dotnet-Binding-Example-Helloworld"></a><p class="title"><strong>Table&#160;2.8.&#160;Example: Hello World</strong></p><div class="table-contents"><table border="1" class="table" summary="Example: Hello World"><colgroup><col class="c1" /><col class="c2" /></colgroup><thead><tr><th>Example Name</th><th>Example Description</th></tr></thead><tbody><tr><td>csharp.example.helloworld</td><td>A program to send a message and to receive the same message.</td></tr></tbody></table></div></div><br class="table-break" /></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="ch02.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="ch02.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="ch02s03.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">Chapter&#160;2.&#160;The .NET Binding for the C++ Messaging Client&#160;</td><td align="center" width="20%"><a accesskey="h" href="index.html">Home</a></td><td align="right" valign="top" width="40%">&#160;2.3.&#160;.NET Binding Class Mapping to Underlying C++ Messaging API</td></tr></table></div></div>