<div class="docbook"><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">5.4.&#160;Creating an 'Initial Configuration' JSON File</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Initial-Config-Location.html">Prev</a>&#160;</td><th align="center" width="60%">Chapter&#160;5.&#160;Initial Configuration</th><td align="right" width="20%">&#160;<a accesskey="n" href="Java-Broker-Initial-Configuration-Type.html">Next</a></td></tr></table><hr /></div><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="Java-Broker-Initial-Configuration-Create-Initial-Config"></a>5.4.&#160;Creating an 'Initial Configuration' JSON File</h2></div></div></div><p> It is possible to have the broker output its default internal 'Initial Configuration'
            file to disk using the command line argument <span class="emphasis"><em>-cic</em></span> (or
                <span class="emphasis"><em>--create-initial-config</em></span>). If the option is used without
            providing a path, a file called <span class="emphasis"><em>initial-config.json</em></span> will be created
            in the current directory, or alternatively the file can be created at a specified
            location: </p><pre class="screen">
$ ./qpid-server -cic ./initial-config.json
        </pre><p> The 'Initial Configuration' JSON file shares a common format with the brokers JSON
            Configuration Store implementation, so it is possible to use a Broker's Configuration
            Store output as an initial configuration. Typically 'Initial Configuration' files would
            not to contain IDs for the configured entities, so that IDs will be generated when the
            configuration store is initialised and prevent use of the same IDs across multiple
            brokers, however it may prove useful to include IDs if using the Memory <a class="link" href="Java-Broker-Initial-Configuration-Type.html" title="5.5.&#160;Configuration Store Type">Configuration Store Type</a>. </p><p> It can be useful to use <a class="link" href="Java-Broker-Initial-Configuration-Configuration-Properties.html" title="5.6.&#160;Customising Configuration using Configuration Properties">Configuration
                Properties</a> within 'Initial Configuration' files to allow a degree of
            customisation with an otherwise fixed file. </p><p> For an example file, see <a class="xref" href="Java-Broker-Initial-Configuration-Example.html" title="5.7.&#160;Example of JSON 'Initial Configuration'">Section&#160;5.7, &#8220;Example of JSON 'Initial Configuration'&#8221;</a>
        </p></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="Java-Broker-Initial-Configuration-Initial-Config-Location.html">Prev</a>&#160;</td><td align="center" width="20%"><a accesskey="u" href="Java-Broker-Initial-Configuration.html">Up</a></td><td align="right" width="40%">&#160;<a accesskey="n" href="Java-Broker-Initial-Configuration-Type.html">Next</a></td></tr><tr><td align="left" valign="top" width="40%">5.3.&#160;'Initial Configuration' Location&#160;</td><td align="center" width="20%"><a accesskey="h" href="Apache-Qpid-Broker-J-Book.html">Home</a></td><td align="right" valign="top" width="40%">&#160;5.5.&#160;Configuration Store Type</td></tr></table></div></div>