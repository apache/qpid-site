
<h1>simple_connect.cpp</h1>
<div class="highlight"><pre><span></span><span class="cp">#include</span> <span class="cpf">&quot;options.hpp&quot;</span><span class="cp"></span>

<span class="cp">#include</span> <span class="cpf">&lt;proton/connection.hpp&gt;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&lt;proton/connection_options.hpp&gt;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&lt;proton/container.hpp&gt;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&lt;proton/messaging_handler.hpp&gt;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&lt;proton/reconnect_options.hpp&gt;</span><span class="cp"></span>

<span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp"></span>

<span class="cp">#include</span> <span class="cpf">&quot;fake_cpp11.hpp&quot;</span><span class="cp"></span>

<span class="k">class</span> <span class="nc">simple_connect</span> <span class="o">:</span> <span class="k">public</span> <span class="n">proton</span><span class="o">::</span><span class="n">messaging_handler</span> <span class="p">{</span>
  <span class="k">private</span><span class="o">:</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">url</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">user</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">password</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">reconnect</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">sasl</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">mechs</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">insecure</span><span class="p">;</span>
    <span class="n">proton</span><span class="o">::</span><span class="n">connection</span> <span class="n">connection</span><span class="p">;</span>

  <span class="k">public</span><span class="o">:</span>
    <span class="n">simple_connect</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="n">u</span><span class="p">,</span> <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="o">&amp;</span><span class="n">p</span><span class="p">,</span>
                   <span class="kt">bool</span> <span class="n">r</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">s</span><span class="p">,</span> <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">ms</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">in</span><span class="p">)</span> <span class="o">:</span>
        <span class="n">url</span><span class="p">(</span><span class="n">a</span><span class="p">),</span> <span class="n">user</span><span class="p">(</span><span class="n">u</span><span class="p">),</span> <span class="n">password</span><span class="p">(</span><span class="n">p</span><span class="p">),</span>
        <span class="n">reconnect</span><span class="p">(</span><span class="n">r</span><span class="p">),</span> <span class="n">sasl</span><span class="p">(</span><span class="n">s</span><span class="p">),</span> <span class="n">mechs</span><span class="p">(</span><span class="n">ms</span><span class="p">),</span> <span class="n">insecure</span><span class="p">(</span><span class="n">in</span><span class="p">)</span> <span class="p">{}</span>

    <span class="kt">void</span> <span class="n">on_container_start</span><span class="p">(</span><span class="n">proton</span><span class="o">::</span><span class="n">container</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">)</span> <span class="n">OVERRIDE</span> <span class="p">{</span>
        <span class="n">proton</span><span class="o">::</span><span class="n">connection_options</span> <span class="n">co</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">user</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="n">co</span><span class="p">.</span><span class="n">user</span><span class="p">(</span><span class="n">user</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">password</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="n">co</span><span class="p">.</span><span class="n">password</span><span class="p">(</span><span class="n">password</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">reconnect</span><span class="p">)</span> <span class="n">co</span><span class="p">.</span><span class="n">reconnect</span><span class="p">(</span><span class="n">proton</span><span class="o">::</span><span class="n">reconnect_options</span><span class="p">());</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sasl</span><span class="p">)</span> <span class="n">co</span><span class="p">.</span><span class="n">sasl_enabled</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span>
        <span class="c1">//</span>
        <span class="c1">// NB: We only set sasl options if they are not default to avoid</span>
        <span class="c1">// forcing SASL negotiation on when it&#39;s not needed.</span>
        <span class="c1">//</span>
        <span class="c1">// This is because the SASL negotiation is turned off unless</span>
        <span class="c1">// it is needed. Setting a username/password or any SASL option will</span>
        <span class="c1">// force the SASL negotiation to be turned on.</span>
        <span class="c1">//</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">mechs</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="n">co</span><span class="p">.</span><span class="n">sasl_allowed_mechs</span><span class="p">(</span><span class="n">mechs</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">insecure</span><span class="p">)</span> <span class="n">co</span><span class="p">.</span><span class="n">sasl_allow_insecure_mechs</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span>
        <span class="n">connection</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">connect</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">co</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="kt">void</span> <span class="n">on_connection_open</span><span class="p">(</span><span class="n">proton</span><span class="o">::</span><span class="n">connection</span> <span class="o">&amp;</span><span class="n">c</span><span class="p">)</span> <span class="n">OVERRIDE</span> <span class="p">{</span>
        <span class="n">c</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="kt">void</span> <span class="n">on_error</span><span class="p">(</span><span class="k">const</span> <span class="n">proton</span><span class="o">::</span><span class="n">error_condition</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span> <span class="n">OVERRIDE</span> <span class="p">{</span>
        <span class="k">throw</span> <span class="n">std</span><span class="o">::</span><span class="n">runtime_error</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">address</span><span class="p">(</span><span class="s">&quot;127.0.0.1:5672/examples&quot;</span><span class="p">);</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">user</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">password</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">reconnect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">sasl</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">mechs</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">insecure</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="n">example</span><span class="o">::</span><span class="n">options</span> <span class="n">opts</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>

    <span class="n">opts</span><span class="p">.</span><span class="n">add_value</span><span class="p">(</span><span class="n">address</span><span class="p">,</span> <span class="sc">&#39;a&#39;</span><span class="p">,</span> <span class="s">&quot;address&quot;</span><span class="p">,</span> <span class="s">&quot;connect and send to URL&quot;</span><span class="p">,</span> <span class="s">&quot;URL&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_value</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="sc">&#39;u&#39;</span><span class="p">,</span> <span class="s">&quot;user&quot;</span><span class="p">,</span> <span class="s">&quot;authenticate as USER&quot;</span><span class="p">,</span> <span class="s">&quot;USER&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_value</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="sc">&#39;p&#39;</span><span class="p">,</span> <span class="s">&quot;password&quot;</span><span class="p">,</span> <span class="s">&quot;authenticate with PASSWORD&quot;</span><span class="p">,</span> <span class="s">&quot;PASSWORD&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_flag</span><span class="p">(</span><span class="n">reconnect</span><span class="p">,</span> <span class="sc">&#39;r&#39;</span><span class="p">,</span> <span class="s">&quot;reconnect&quot;</span><span class="p">,</span> <span class="s">&quot;reconnect on connection failure&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_flag</span><span class="p">(</span><span class="n">sasl</span><span class="p">,</span><span class="sc">&#39;s&#39;</span><span class="p">,</span> <span class="s">&quot;sasl&quot;</span><span class="p">,</span> <span class="s">&quot;force SASL authentication with no user specified (Use for Kerberos/GSSAPI)&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_value</span><span class="p">(</span><span class="n">mechs</span><span class="p">,</span> <span class="sc">&#39;m&#39;</span><span class="p">,</span> <span class="s">&quot;mechs&quot;</span><span class="p">,</span> <span class="s">&quot;allowed SASL mechanisms&quot;</span><span class="p">,</span> <span class="s">&quot;MECHS&quot;</span><span class="p">);</span>
    <span class="n">opts</span><span class="p">.</span><span class="n">add_flag</span><span class="p">(</span><span class="n">insecure</span><span class="p">,</span> <span class="sc">&#39;i&#39;</span><span class="p">,</span> <span class="s">&quot;insecure&quot;</span><span class="p">,</span> <span class="s">&quot;allow clear-text passwords&quot;</span><span class="p">);</span>

    <span class="k">try</span> <span class="p">{</span>
        <span class="n">opts</span><span class="p">.</span><span class="n">parse</span><span class="p">();</span>

        <span class="n">simple_connect</span> <span class="n">connect</span><span class="p">(</span><span class="n">address</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">,</span> <span class="n">reconnect</span><span class="p">,</span> <span class="n">sasl</span><span class="p">,</span> <span class="n">mechs</span><span class="p">,</span> <span class="n">insecure</span><span class="p">);</span>
        <span class="n">proton</span><span class="o">::</span><span class="n">container</span><span class="p">(</span><span class="n">connect</span><span class="p">).</span><span class="n">run</span><span class="p">();</span>

        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="k">const</span> <span class="n">example</span><span class="o">::</span><span class="n">bad_option</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">opts</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span> <span class="o">&lt;&lt;</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">exception</span><span class="o">&amp;</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="n">e</span><span class="p">.</span><span class="n">what</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>

<p><a href="simple_connect.cpp">Download this file</a></p>
