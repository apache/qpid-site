<div class="docbook"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">Chapter 10. High Availability</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="Java-Broker-Runtime-Memory.html">Prev</a> </td><th width="60%" align="center"> </th><td width="20%" align="right"> <a accesskey="n" href="Java-Broker-High-Availability-OverviewOfHA.html">Next</a></td></tr></table><hr /></div><div class="chapter"><div class="titlepage"><div><div><h1 class="title"><a id="Java-Broker-High-Availability"></a>Chapter 10. High Availability</h1></div></div></div><div class="toc"><p><strong>Table of Contents</strong></p><dl class="toc"><dt><span class="section"><a href="Java-Broker-High-Availability.html#Java-Broker-High-Availability-GeneralIntroduction">10.1. General Introduction</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-OverviewOfHA.html">10.2. High Availability Overview</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-CreatingGroup.html">10.3. Creating a group</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html">10.4. Behaviour of the Group</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-Default-Behaviour">10.4.1. Default Behaviour</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-SynchronizationPolicy">10.4.2. Synchronization Policy</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-NodePriority">10.4.3. Node Priority</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-MinimumNumberOfNodes">10.4.4. Required Minimum Number Of Nodes</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-DesignatedPrimary">10.4.5. Allow to Operate Solo</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Behaviour.html#Java-Broker-High-Availability-Behaviour-MaximumMessageSize">10.4.6. Maximum message size</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-High-Availability-NodeOperations.html">10.5. Node Operations</a></span></dt><dd><dl><dt><span class="section"><a href="Java-Broker-High-Availability-NodeOperations.html#Java-Broker-High-Availability-NodeOperations-Lifecycle">10.5.1. Lifecycle</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-NodeOperations.html#Java-Broker-High-Availability-NodeOperations-TransferMaster">10.5.2. Transfer Master</a></span></dt></dl></dd><dt><span class="section"><a href="Java-Broker-High-Availability-ClientFailover.html">10.6. Client failover</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-DiskSpace.html">10.7. Disk space requirements</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Network-Requirements.html">10.8. Network Requirements</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Security.html">10.9. Security</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Backup.html">10.10. Backups</a></span></dt><dt><span class="section"><a href="Java-Broker-High-Availability-Reset-Group-Infomational.html">10.11. Reset Group Information</a></span></dt></dl></div><div class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="Java-Broker-High-Availability-GeneralIntroduction"></a>10.1. General Introduction</h2></div></div></div><p>The term High Availability (HA) usually refers to having a number of instances of a
      service such as a Message Broker available so that should a service unexpectedly fail, or
      requires to be shutdown for maintenance, users may quickly connect to another instance and
      continue their work with minimal interruption. HA is one way to make a overall system more
      resilient by eliminating a single point of failure from a system.</p><p>HA offerings are usually categorised as <span class="bold"><strong>Active/Active</strong></span> or
        <span class="bold"><strong>Active/Passive</strong></span>. An Active/Active system is one where all
      nodes within the group are usually available for use by clients all of the time. In an
      Active/Passive system, one only node within the group is available for use by clients at any
      one time, whilst the others are in some kind of standby state, awaiting to quickly step-in in
      the event the active node becomes unavailable. </p></div></div><div class="navfooter"><hr /><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="Java-Broker-Runtime-Memory.html">Prev</a> </td><td width="20%" align="center"> </td><td width="40%" align="right"> <a accesskey="n" href="Java-Broker-High-Availability-OverviewOfHA.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">9.11. Memory </td><td width="20%" align="center"><a accesskey="h" href="Apache-Qpid-Broker-J-Book.html">Home</a></td><td width="40%" align="right" valign="top"> 10.2. High Availability Overview</td></tr></table></div></div>